{"version":3,"file":"static/js/981.1337ec15.chunk.js","mappings":"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","sources":["webpack://folder1/./src/components/Edit/Edit.module.css?5b67","components/Edit/EditProfile.jsx","components/Edit/EditMenu.jsx","components/Edit/EditContacts.jsx","components/Edit/EditContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Edit_main__emhAk\",\"leftColumn\":\"Edit_leftColumn__dVqJ5\",\"rightColumn\":\"Edit_rightColumn__ns8-g\",\"pageProfileEdit\":\"Edit_pageProfileEdit__7g-wX\",\"pageContactsEdit\":\"Edit_pageContactsEdit__WzSJ1\",\"header\":\"Edit_header__4uZir\",\"headerContacts\":\"Edit_headerContacts__voHIs\",\"imageCover\":\"Edit_imageCover__5Anro\",\"editAvatar\":\"Edit_editAvatar__5OhmW\",\"editAvatarPanel\":\"Edit_editAvatarPanel__IOes1\",\"editName\":\"Edit_editName__MF4rU\",\"editNickname\":\"Edit_editNickname__laby1\",\"editNicknameLabel\":\"Edit_editNicknameLabel__hwcdI\",\"editNicknameTool\":\"Edit_editNicknameTool__vU0C1\",\"editNickNameHref\":\"Edit_editNickNameHref__PNDGF\",\"addInfo\":\"Edit_addInfo__WZNAB\",\"briefInfo\":\"Edit_briefInfo__zB+Pl\",\"briefInfoLabel\":\"Edit_briefInfoLabel__B8rHs\",\"editMenu\":\"Edit_editMenu__z0B9z\",\"personalInfoMenu\":\"Edit_personalInfoMenu__OxP2+\",\"editPageList\":\"Edit_editPageList__PsjHW\",\"editLine\":\"Edit_editLine__EGNBJ\",\"editProfileLine\":\"Edit_editProfileLine__3-Sc1\",\"formSubmitBtn\":\"Edit_formSubmitBtn__wKhs7\",\"submitUnsuccess\":\"Edit_submitUnsuccess__fOx5z\",\"submitSuccess\":\"Edit_submitSuccess__94tLi\"};","import { Field, Form, Formik } from 'formik';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CreateField, EditDefaultInput, LoginInput, MessageInput, SearchInput, StatusEditField, Textarea } from '../common/preloader/FormControl/FormControl';\r\nimport classes from './Edit.module.css';\r\n\r\n\r\n\r\nconst EditProfile = (props) => {\r\n  useEffect(() => {\r\n    props.getProfileStatus(props.userId)\r\n  }, [])\r\n  return (\r\n    <div >\r\n      <MainInfoEdit profile={props.profile} photo={props.defaultPhoto} />\r\n      <AdditionalyInfoEdit status={props.status} profile={props.profile} saveProfile={props.saveProfile} updateStatus={props.updateStatus}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst MainInfoEdit = (props) => {\r\n  return (\r\n    <div className={classes.pageProfileEdit}>\r\n      <div className={classes.header}>\r\n        Профиль\r\n      </div>\r\n      <div className={classes.imageCover}>\r\n      </div>\r\n      <div className={classes.editAvatarPanel}>\r\n        <div className={classes.editAvatar}>\r\n          <img src={props.photo} />\r\n        </div>\r\n        <div className={classes.editName}>\r\n          <div>\r\n            {\r\n              props.profile.fullName\r\n            }\r\n          </div>\r\n          <div>\r\n            <NavLink>Изменить в VK ID</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={classes.editNickname}>\r\n        <div className={classes.editNicknameLabel}>\r\n          Никнейм\r\n        </div>\r\n        <div className={classes.editNicknameTool}>\r\n          <div>\r\n            {\r\n              \"id: \" + props.profile.userId\r\n            }\r\n          </div>\r\n          <div className={classes.editNickNameHref}>\r\n            <NavLink>Изменить</NavLink>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst AdditionalyInfoEdit = ({profile, status, ...props}) => {\r\n  const contacts = profile.contacts;\r\n  const submit = (values, { setSubmitting, setStatus }) => {\r\n    props.saveProfile(values, setStatus)\r\n    props.updateStatus(values.status)\r\n    //LoginThunk(values.login, values.password, values.rememberMe, true, setStatus)\r\n    setTimeout(() => {\r\n      setSubmitting(false);\r\n    }, 400);\r\n  }\r\n  return (\r\n    <div className={classes.addInfo}>\r\n      <Formik\r\n        initialValues={{ \r\n          status: status, \r\n          AboutMe: profile.aboutMe, lookingForAJob: profile.lookingForAJob, \r\n          lookingForAJobDescription: profile.lookingForAJobDescription, fullName: profile.fullName,\r\n          contacts: {\r\n            facebook: contacts.facebook, github: contacts.github, vk: contacts.vk, instagram: contacts.instagram,\r\n            twitter: contacts.twitter, website: contacts.website, youtube: contacts.youtube, mainLink: contacts.mainLink,\r\n          },\r\n        }}\r\n        onSubmit={submit}\r\n        enableReinitialize= \"true\"\r\n      >{({ status, values }) => (\r\n        <Form>\r\n          {\r\n            status && status.success\r\n              &&\r\n              <div className={classes.submitSuccess}>\r\n                <span>{status.success}</span>\r\n                <p>Новые данные будут отражены на вашей странице.</p>\r\n              </div>           \r\n          }\r\n          {\r\n            status && status.error\r\n              &&\r\n              <div className={classes.submitUnsuccess}>\r\n                <span>{status.error}</span>\r\n                <p>Не корректные данные</p>\r\n              </div>           \r\n          }\r\n          {\r\n            <FieldCreator description={\"Полное имя\"}>{CreateField('', \"fullName\", null, EditDefaultInput)}</FieldCreator>\r\n          }\r\n          {\r\n            <FieldCreator description={\"Статус\"}>{CreateField('', \"status\", null, StatusEditField)}</FieldCreator>\r\n          }\r\n          {\r\n            <FieldCreator description={\"Обо мне\"}>{CreateField('', \"AboutMe\", null, StatusEditField)}</FieldCreator>\r\n          }\r\n          {\r\n            <FieldCreator description={\"Ищу работу\"}>{CreateField(null, \"lookingForAJob\", null, null, { type: \"checkbox\" })}</FieldCreator>\r\n          }\r\n          {\r\n            values.lookingForAJob &&\r\n            <FieldCreator description={\"Умения\"}>{CreateField('', \"lookingForAJobDescription\", null, StatusEditField)}</FieldCreator>\r\n          }\r\n          <div className={classes.editProfileLine}></div>\r\n          <div className={classes.formSubmitBtn}>\r\n            <button type='submit'>Сохранить</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst FieldCreator = ({ description, children }) => {\r\n  return <div className={classes.briefInfo}>\r\n    <div className={classes.briefInfoLabel}>\r\n      {description}:\r\n    </div>\r\n    {children}\r\n  </div>\r\n}\r\n\r\nexport default EditProfile;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport classes from './Edit.module.css'\r\n\r\nexport const EditMenu = () => {\r\n    return (\r\n        <div className={classes.editMenu}>\r\n            <div className={classes.personalInfoMenu}>\r\n                Личные данные\r\n            </div>\r\n            <div className={classes.editLine}></div>\r\n            <div className={classes.editPageList}>\r\n                <NavLink to={'/edit/profileEdit'}>\r\n                    Профиль\r\n                </NavLink>\r\n                <NavLink to={'/edit/contactsEdit'}>\r\n                    Контакты\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Field, Form, Formik } from 'formik';\r\nimport React, { Children, useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CreateField, EditDefaultInput, LoginInput, MessageInput, SearchInput, StatusEditField, Textarea } from '../common/preloader/FormControl/FormControl';\r\nimport classes from './Edit.module.css';\r\nimport classNames from 'classnames'\r\nimport { EditMenu } from './EditMenu';\r\n\r\n\r\nconst EditContacts = (props) => {\r\n  return (\r\n    <div >\r\n      <MainInfoEdit profile={props.profile} photo={props.defaultPhoto} saveProfile={props.saveProfile} userId={props.userId}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst MainInfoEdit = ({ profile, ...props }) => {\r\n  \r\n  const contacts = profile.contacts;\r\n  for ( let key in contacts) {\r\n    if(contacts[key] == null) contacts[key] = \"\";\r\n    /* ... делать что-то с obj[key] ... */\r\n  }\r\n\r\n  \r\n  const submit = (values, { setSubmitting, setStatus }) => {\r\n    props.saveProfile(values, setStatus);\r\n    setTimeout(() => {\r\n      setSubmitting(false);\r\n    }, 400);\r\n  }\r\n  return (\r\n    <div className={classes.pageContactsEdit}>\r\n      <div className={classes.header}>\r\n        <div className={classes.headerContacts}>\r\n          Контакты\r\n        </div>\r\n      </div>\r\n      <Formik\r\n        initialValues={{\r\n          contacts: {\r\n            facebook: contacts.facebook, github: contacts.github, vk: contacts.vk, instagram: contacts.instagram,\r\n            twitter: contacts.twitter, website: contacts.website, youtube: contacts.youtube, mainLink: contacts.mainLink,\r\n          },\r\n          AboutMe: profile.aboutMe, lookingForAJob: false, lookingForAJobDescription: profile.lookingForAJobDescription, fullName: profile.fullName\r\n        }}\r\n        onSubmit={submit}\r\n      >{({ errors, status }) => (\r\n        <Form>\r\n          {\r\n            status && status.success\r\n              &&\r\n              <div className={classes.submitSuccess}>\r\n                <span>{status.success}</span>\r\n                <p>Новые данные будут отражены на вашей странице.</p>\r\n              </div>           \r\n          }\r\n          {\r\n            status && status.error\r\n              &&\r\n              <div className={classes.submitUnsuccess}>\r\n                <span>{status.error}</span>\r\n                <p>Не корректные данные</p>\r\n              </div>           \r\n          }\r\n          {\r\n            Object.keys(contacts).map(key => {\r\n              return <Contact key={key} contact={key}>{CreateField('', `contacts.${key}`, null, EditDefaultInput)}</Contact>\r\n            })\r\n          }\r\n\r\n          <div className={classes.editProfileLine}></div>\r\n          <div className={classes.formSubmitBtn}>\r\n            <button type='submit'>Сохранить</button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Contact = ({ contact, children }) => {\r\n  return <div className={classes.briefInfo}>\r\n    <div className={classes.briefInfoLabel}>\r\n      {contact}:\r\n    </div>\r\n    {children}\r\n  </div>\r\n}\r\n\r\nexport default EditContacts;\r\n\r\n/*\r\nfacebook: contacts.facebook, github: contacts.github, vk: contacts.vk, instagram: contacts.instagram, \r\n          twitter: contacts.twitter, website: contacts.website, youtube: contacts.youtube, mainLink: contacts.mainLink,\r\n*/\r\n","import React, { Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditProfile from './EditProfile';\r\nimport classes from './Edit.module.css';\r\nimport { getProfileThunkCreator, getProfileStatusThunkCreator, saveProfileThunkCreator, updateProfileStatusThunkCreator } from \"../../redux/profileReducer\"\r\nimport { Preloader } from '../common/preloader/Preloader';\r\nimport { Route, Routes, useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { EditMenu } from './EditMenu';\r\nimport EditContacts from './EditContacts';\r\n\r\n\r\n\r\n\r\n\r\nclass EditClass extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getProfileStatusThunkCreator(this.props.userId)\r\n    this.props.getProfileThunkCreator(this.props.userId)    \r\n  }\r\n\r\n  render() {\r\n    if (this.props.profile !== null) {\r\n      return (\r\n        <div className={classes.main}>\r\n          <div className={classes.leftColumn}>\r\n            {\r\n              this.props.router.params.page === \"contactsEdit\" ? \r\n              <EditContacts {...this.props} saveProfile={this.props.saveProfileThunkCreator} \r\n              getProfileInfo={this.props.getProfileThunkCreator} getProfileStatus={this.props.getProfileStatusThunkCreator}\r\n              userId={this.props.userId}\r\n              /> \r\n              : \r\n              <EditProfile defaultPhoto={this.props.defaultPhoto} profile={this.props.profile} status={this.props.status}\r\n              saveProfile={this.props.saveProfileThunkCreator} updateStatus={this.props.updateProfileStatusThunkCreator}\r\n              getProfileInfo={this.props.getProfileThunkCreator} getProfileStatus={this.props.getProfileStatusThunkCreator}\r\n              userId={this.props.userId}\r\n              />\r\n            }\r\n          </div>\r\n          <div className={classes.rightColumn}>\r\n            <EditMenu />\r\n          </div>\r\n        </div>\r\n      ) \r\n    }\r\n    else {\r\n      return <Preloader />\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isFetching: state.AuthPage.isFetching,\r\n    defaultPhoto: state.ProfilePage.AvatarImg,\r\n    profile: state.ProfilePage.profile,\r\n    userId: state.AuthPage.userId,\r\n    status: state.ProfilePage.status\r\n  }\r\n}\r\n\r\nfunction withRoute(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nlet EditContainer = connect(mapStateToProps, { getProfileThunkCreator, getProfileStatusThunkCreator, \r\n  saveProfileThunkCreator, updateProfileStatusThunkCreator })\r\n  (withRoute(EditClass));\r\n\r\nexport default EditContainer;\r\n"],"names":["MainInfoEdit","props","_jsxs","className","classes","children","_jsx","src","photo","profile","fullName","NavLink","userId","AdditionalyInfoEdit","_ref","status","_objectWithoutProperties","_excluded","contacts","Formik","initialValues","AboutMe","aboutMe","lookingForAJob","lookingForAJobDescription","facebook","github","vk","instagram","twitter","website","youtube","mainLink","onSubmit","values","_ref2","setSubmitting","setStatus","saveProfile","updateStatus","setTimeout","enableReinitialize","_ref3","Form","success","error","FieldCreator","description","CreateField","EditDefaultInput","StatusEditField","type","_ref4","useEffect","getProfileStatus","defaultPhoto","EditMenu","to","key","errors","Object","keys","map","Contact","contact","concat","EditClass","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","value","this","getProfileStatusThunkCreator","getProfileThunkCreator","router","params","page","EditContacts","_objectSpread","saveProfileThunkCreator","getProfileInfo","EditProfile","updateProfileStatusThunkCreator","Preloader","React","Component","connect","state","isFetching","AuthPage","ProfilePage","AvatarImg","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}